import android.app.AlertDialog;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import android.util.Log;
import java.util.Locale;
public class DatabaseHelper extends SQLiteOpenHelper {
 public static final String DATABASE_NAME="department_info.db";
 public static final String TABLE_NAME="student_table";
 public static final String COL_1="ID";
 public static final String COL_2="NAME";
 public static final String COL_3="MARKS";
 SQLiteDatabase db;
 public DatabaseHelper(Context context) {
 super(context, DATABASE_NAME, null, 1);
 db=this.getWritableDatabase();
 Log.d("Database:","Constructor called");
 }
 @Override
 public void onCreate(SQLiteDatabase db) { 
 Log.d("Database:","onCreate called");
 db.execSQL("create table if not exists " + TABLE_NAME +
" ( " + COL_1 + " INTEGER PRIMARY KEY AUTOINCREMENT," + COL_2 + "
TEXT, " + COL_3 + " INTEGER);");
 }
 @Override
 public void onUpgrade(SQLiteDatabase db, int oldVersion, int
newVersion) {
 Log.d("Database:","onUpgrade called");
 db.execSQL("DROP TABLE IF EXISTS "+ TABLE_NAME);
 onCreate(db);
 }
 public void insert_record(String name, int marks){
 //String query="INSERT INTO student_table (Name, Marks)
// VALUES ('"+name+"',"+marks+");";
 //String query="INSERT INTO student_table VALUES (null,
'"+name+"',"+marks+");";
 //db.execSQL(query);
 ContentValues contentValues = new ContentValues();
 contentValues.put(COL_2,name);
 contentValues.put(COL_3,marks);
 db.insert(TABLE_NAME,null, contentValues);
 Log.d("Database:","insert called");
 }
 public void delete_record(String name){
 db.delete(TABLE_NAME,COL_2+" =?",new String[]{name});
 Log.d("Database", "Record Deleted");
 }
 public void update_record(String name, int marks){
 ContentValues contentValues = new ContentValues();
 contentValues.put(COL_3,marks);
 db.update(TABLE_NAME,contentValues, COL_2+"?",new String[]
{name});
 Log.d("Database", "Record updated");
 }
 public StringBuffer display_all_records(){
 Log.d("Database:","display called");
 StringBuffer buffer=new StringBuffer();
 Cursor c=db.rawQuery("SELECT * FROM student_table", null); 
 Log.d("Database:","after select");
 if(c.getCount()==0) {
 buffer.append("Error"+ "No records found");
 Log.d("Database:","no records found");
 return(buffer); }
 while(c.moveToNext()) {
 buffer.append("ID: "+c.getString(0)+"\n");
 buffer.append("Name: "+c.getString(1)+"\n");
 buffer.append("Marks: "+c.getString(2)+"\n\n");
 }
 return buffer;
 }
}